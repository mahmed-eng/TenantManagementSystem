@model UniversityCourseandResultManagement.Models.Result
@{
    ViewBag.Title = "Save Student Result";
    Layout = "~/Views/Shared/_MasterLayoutPage.cshtml";
}

@section styles
{
    <style>
        .field-validation-error {
            color: red;
        }
    </style>
}






<section class="wrapper">
    <div class="form-w3layouts">
        <div class="row">
            <div class="col-lg-12">
                <section class="panel">
                    <header class="panel-heading">
                        Save Student Result
                    </header>
                    <div class="panel-body">
                        <div class="position-center">


                            @using (Html.BeginForm(null, null, FormMethod.Post))
                            {
                                <div class="form-group">
                                    @Html.LabelFor(r => r.StudentId)
                                    @Html.DropDownListFor(r => r.StudentId, new SelectList(ViewBag.Students, "Id", "Regno"), "------Select Student------", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(r => r.StudentId)
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(r => r.StudentName)
                                    @Html.TextBoxFor(r => r.StudentName, new { @class = "form-control", @readonly = "readonly" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(r => r.StudentEmail)
                                    @Html.TextBoxFor(r => r.StudentEmail, new { @class = "form-control", @readonly = "readonly" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(r => r.StudentDept)
                                    @Html.TextBoxFor(r => r.StudentDept, new { @class = "form-control", @readonly = "readonly" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(r => r.CourseId)
                                    @Html.DropDownListFor(r => r.CourseId, new SelectList("", "", ""), "------Select Course------", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(r => r.CourseId)
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(r => r.GradeId)
                                    @Html.DropDownListFor(r => r.GradeId, new SelectList(ViewBag.Grades, "Id", "Grade"), "------Select Grade Letter------", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(r => r.GradeId)
                                </div>

                                <button type="submit" class="btn btn-info">Save</button>
                            }

                        </div>
                        
                        <br /><br />

                        @{
                            if (ViewBag.Message == null)
                            { }
                            else
                            {
                                <div class="alert alert-success" role="alert">
                                    <strong>@ViewBag.Message</strong>
                                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                            }
                        }

                    </div>
                </section>

            </div>
        </div>
    </div>
</section>

@section scripts
{
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    <script>
        document.getElementById('StudentId').value = '';
        document.getElementById('StudentName').value = '';
        document.getElementById('StudentEmail').value = '';
        document.getElementById('StudentDept').value = '';
        document.getElementById('CourseId').value = '';
        document.getElementById('GradeId').value = '';
    </script>
    
    <script>
        $(document).ready(function () {

            $("#StudentId").change(function () {
                var stdId = $("#StudentId").val();
                var json = { Id: stdId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetStudentById", "Course")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function(data) {
                        $("#StudentName").val(data.StudentName);
                        $("#StudentEmail").val(data.StudentEmail);
                        $("#StudentDept").val(data.StudentDepartment);
                    }
                });
            });

            $("#StudentId").change(function () {
                var stdId = $("#StudentId").val();
                $("#CourseId").empty();
                var json = { Id: stdId };
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetEnrollCourseByStudentId", "Student")',
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(json),
                    success: function (courses) {
                        $("#CourseId").append('<option value=' + "" + '>' + "------Select Course------" + '</option>');
                        $.each(courses, function (key, value) {
                            $("#CourseId").append('<option value=' + value.CourseId + '>' + value.CourseCode + '</option>');
                        });

                    }
                });
            });



        });
    </script>

}



